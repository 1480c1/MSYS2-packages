diff --git a/mesonbuild/environment.py b/mesonbuild/environment.py
index 6c270431..fc80b178 100644
--- a/mesonbuild/environment.py
+++ b/mesonbuild/environment.py
@@ -257,7 +257,7 @@ def detect_cpu(compilers):
 
 def detect_system():
     system = platform.system().lower()
-    if system.startswith('cygwin'):
+    if system.startswith('cygwin') or system.startswith('msys'):
         return 'cygwin'
     return system
 
diff --git a/mesonbuild/mesonlib.py b/mesonbuild/mesonlib.py
index 8648a0dc..128092db 100644
--- a/mesonbuild/mesonlib.py
+++ b/mesonbuild/mesonlib.py
@@ -281,7 +281,7 @@ def is_windows():
     return platname == 'windows' or 'mingw' in platname
 
 def is_cygwin() -> bool:
-    return platform.system().lower().startswith('cygwin')
+    return platform.system().lower().startswith('cygwin') or platform.system().lower().startswith('msys')
 
 def is_debianlike() -> bool:
     return os.path.isfile('/etc/debian_version')
--- meson-0.54.3/mesonbuild/mesonmain.py.orig	2020-05-15 09:23:11.000000000 +0200
+++ meson-0.54.3/mesonbuild/mesonmain.py	2020-08-30 18:13:12.849059300 +0200
@@ -192,7 +192,7 @@
     ensure_stdout_accepts_unicode()
 
     # https://github.com/mesonbuild/meson/issues/3653
-    if sys.platform.lower() == 'msys':
+    if sys.platform.lower() == 'msys' and os.environ.get('MSYSTEM', '') != 'MSYS':
         mlog.error('This python3 seems to be msys/python on MSYS2 Windows, which is known to have path semantics incompatible with Meson')
         msys2_arch = detect_msys2_arch()
         if msys2_arch:
diff --git a/mesonbuild/mtest.py b/mesonbuild/mtest.py
index 8d9a5853..7d0ea30d 100644
--- a/mesonbuild/mtest.py
+++ b/mesonbuild/mtest.py
@@ -41,7 +41,7 @@ def is_windows():
 
 def is_cygwin():
     platname = platform.system().lower()
-    return 'cygwin' in platname
+    return 'cygwin' in platname or 'msys' in platname
 
 def determine_worker_count():
     varname = 'MESON_TESTTHREADS'
diff --git a/mesonbuild/scripts/meson_exe.py b/mesonbuild/scripts/meson_exe.py
index 84abfc33..59aabff0 100644
--- a/mesonbuild/scripts/meson_exe.py
+++ b/mesonbuild/scripts/meson_exe.py
@@ -34,7 +34,7 @@ def is_windows():
 
 def is_cygwin():
     platname = platform.system().lower()
-    return 'cygwin' in platname
+    return 'cygwin' in platname or 'msys' in platname
 
 def run_with_mono(fname):
     if fname.endswith('.exe') and not (is_windows() or is_cygwin()):
diff --git a/mesonbuild/build.py b/mesonbuild/build.py
index be9763489..b7a5e0483 100644
--- a/mesonbuild/build.py
+++ b/mesonbuild/build.py
@@ -1785,7 +1785,7 @@ class SharedLibrary(BuildTarget):
             self.gcc_import_filename = '{0}{1}.dll.a'.format(self.prefix if self.prefix is not None else 'lib', self.name)
             # Shared library is of the form cygfoo.dll
             # (ld --dll-search-prefix=cyg is the default)
-            prefix = 'cyg'
+            prefix = 'msys-'
             # Import library is called libfoo.dll.a
             self.import_filename = self.gcc_import_filename
             if self.soversion:
diff --git a/mesonbuild/compilers/mixins/clike.py b/mesonbuild/compilers/mixins/clike.py
index e146f5f62..9b787eae3 100644
--- a/mesonbuild/compilers/mixins/clike.py
+++ b/mesonbuild/compilers/mixins/clike.py
@@ -1043,7 +1043,7 @@ class CLikeCompiler(Compiler):
             stlibext += ['lib']
         elif env.machines[self.for_machine].is_cygwin():
             shlibext = ['dll', 'dll.a']
-            prefixes = ['cyg'] + prefixes
+            prefixes = ['msys-'] + prefixes
         else:
             # Linux/BSDs
             shlibext = ['so']
diff --git a/run_unittests.py b/run_unittests.py
index db61ca6b1..16ce7e960 100755
--- a/run_unittests.py
+++ b/run_unittests.py
@@ -1887,6 +1887,8 @@ class BasePlatformTests(unittest.TestCase):
         base = os.path.splitext(filename)[0]
         if base.startswith(('lib', 'cyg')):
             return base[3:]
+        if base.startswith('msys-'):
+            return base[5:]
         return base
 
     def assertBuildRelinkedOnlyTarget(self, target):
