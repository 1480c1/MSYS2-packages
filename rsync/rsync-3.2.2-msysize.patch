diff -Naur rsync-3.2.2-orig/config.guess rsync-3.2.2/config.guess
--- rsync-3.2.2-orig/config.guess	2020-06-17 07:24:23.000000000 +0300
+++ rsync-3.2.2/config.guess	2020-07-20 09:41:26.909909000 +0300
@@ -904,6 +904,9 @@
     amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
 	echo x86_64-pc-cygwin
 	exit ;;
+    amd64:MSYS*:*:* | x86_64:MSYS*:*:*)
+	echo x86_64-pc-msys
+	exit ;;
     prep*:SunOS:5.*:*)
 	echo powerpcle-unknown-solaris2"`echo "$UNAME_RELEASE"|sed -e 's/[^.]*//'`"
 	exit ;;
diff -Naur rsync-3.2.2-orig/configure.ac rsync-3.2.2/configure.ac
--- rsync-3.2.2-orig/configure.ac	2020-06-30 05:53:05.000000000 +0300
+++ rsync-3.2.2/configure.ac	2020-07-20 09:42:53.001137000 +0300
@@ -346,7 +346,7 @@
 	AS_HELP_STRING([--disable-ipv6],[turn off IPv6 support]))
 if test x"$enable_ipv6" != x"no"; then
 	AC_MSG_CHECKING([ipv6 stack type])
-	for i in inria kame linux-glibc linux-inet6 solaris toshiba v6d zeta cygwin; do
+	for i in inria kame linux-glibc linux-inet6 solaris toshiba v6d zeta cygwin msys; do
 		case $i in
 		inria)
 			# http://www.kame.net/
@@ -433,7 +433,7 @@
 				ipv6libdir=/usr/local/v6/lib;
 				AC_DEFINE(INET6, 1, [true if you have IPv6])])
 			;;
-		cygwin)
+		cygwin|msys)
 			AC_EGREP_CPP(yes, [
 #include <netinet/in.h>
 #ifdef _CYGWIN_IN6_H
@@ -876,7 +876,7 @@
 if test x"$ac_cv_func_posix_fallocate" = x"yes"; then
     AC_MSG_CHECKING([whether posix_fallocate is efficient])
     case $host_os in
-    *cygwin*)
+    *cygwin*|*msys*)
 	AC_MSG_RESULT(yes)
 	AC_DEFINE(HAVE_EFFICIENT_POSIX_FALLOCATE, 1,
 		  [Define if posix_fallocate is efficient (Cygwin)])
